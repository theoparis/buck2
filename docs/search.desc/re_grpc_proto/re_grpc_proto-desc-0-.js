searchState.loadedDescShard("re_grpc_proto", 0, "An <code>Action</code> captures all the information about an execution …\nDescribes the server/instance capabilities for updating …\nAn ActionResult represents the result of an [Action]…\nA request message for …\nA response message for …\nA request message for …\nA response message for …\nCapabilities of the remote cache system.\nA <code>Command</code> is the actual command executed by a worker …\nCompression formats which may be supported.\nA content digest. A digest for a given blob consists of …\nThe digest function used for converting values into keys …\nA <code>Directory</code> represents a directory node in a file tree, …\nA <code>DirectoryNode</code> represents a child of a [Directory]…\nMetadata about an ongoing [execution]…\nA request message for [Execution.Execute]…\nThe response message for [Execution.Execute]…\nExecutedActionMetadata contains details about a completed …\nCapabilities of the remote execution system.\nAn <code>ExecutionPolicy</code> can be used to control the scheduling …\nThe current stage of action execution.\nA <code>FileNode</code> represents a single file and associated …\nA request message for …\nA response message for …\nA request message for [ActionCache.GetActionResult]…\nA request message for [Capabilities.GetCapabilities]…\nA request message for [ContentAddressableStorage.GetTree]…\nA response message for [ContentAddressableStorage.GetTree]…\nA <code>LogFile</code> is a log stored in the CAS.\nNode properties for [FileNodes]…\nA single property for [FileNodes]…\nAn <code>OutputDirectory</code> is the output in an <code>ActionResult</code> …\nAn <code>OutputFile</code> is similar to a [FileNode]…\nAn <code>OutputSymlink</code> is similar to a [Symlink]…\nA <code>Platform</code> is a set of requirements, such as hardware, …\nAllowed values for priority in [ResultsCachePolicy]…\nAn optional Metadata to attach to any RPC request to tell …\nA <code>ResultsCachePolicy</code> is used for fine-grained control over …\nA response message for [Capabilities.GetCapabilities]…\nDescribes how the server treats absolute symlink targets.\nA <code>SymlinkNode</code> represents a symbolic link.\nDetails for the tool used to call the API.\nA <code>Tree</code> contains all the [Directory]…\nA request message for [ActionCache.UpdateActionResult]…\nA request message for [WaitExecution]…\nReturns an iterator which yields the valid enum values …\nA list of acceptable encodings for the returned inlined …\nGenerated client implementations.\nGenerated server implementations.\nCapabilities for updating the action cache.\nThe digest of the [Action]…\nThe digest of the [Action]…\nThe digest of the [Action]…\nThe digest of the [Action]…\nAn identifier that ties multiple requests to the same …\nA brief description of the kind of action, for example, …\nThe [ActionResult]…\nThe arguments to the command.\nDetails that are specific to the kind of worker used. For …\nNested message and enum types in <code>BatchReadBlobsResponse</code>.\nNested message and enum types in <code>BatchUpdateBlobsRequest</code>.\nNested message and enum types in <code>BatchUpdateBlobsResponse</code>.\nA list of the blobs to check.\nCapabilities of the remote cache system.\nSupported cache priority range for both CAS and …\nTrue if the result was served from cache, false if it was …\nGenerated client implementations.\nGenerated server implementations.\nAll the child directories: the directories referred to by …\nNested message and enum types in <code>Command</code>.\nThe digest of the [Command]…\nNested message and enum types in <code>Compressor</code>.\nAn identifier for the configuration in which the target …\nGenerated client implementations.\nGenerated server implementations.\nThe contents of the file if inlining was requested. The …\nAn identifier to tie multiple tool invocations together. …\nEarliest RE API version supported, including deprecated …\nThe digest of the file’s content.\nThe digest of the [Directory]…\nThe digest of the file’s content.\nThe digest of the log contents.\nNested message and enum types in <code>DigestFunction</code>.\nReturns the enum value of <code>digest_function</code>, or the default …\nRemote execution may only support a single digest function.\nReturns an iterator which yields the valid enum values …\nAll the digest functions supported by the remote cache. …\nThe individual blob digests.\nThe subdirectories in the directory.\nThe directories descended from the requested root.\nIf true, then the <code>Action</code>’s result cannot be cached, and …\nThe environment variables to set when running the program. …\nWhether remote execution is enabled for the particular …\nCapabilities of the remote execution system.\nGenerated client implementations.\nWhen the worker completed executing the action command.\nThe details of the execution that originally produced this …\nAn optional policy for execution of the action. The server …\nSupported execution priority range.\nGenerated server implementations.\nNested message and enum types in <code>ExecutionStage</code>.\nWhen the worker started executing the action command.\nThe exit code of the command.\nThe files in the directory.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nThe hash. In the case of SHA-256, it will always be a …\nLatest RE API version supported.\nThis is a hint as to the purpose of the log, and is set to …\nA hint to the server to inline the contents of the listed …\nA hint to the server to request inlining stderr in the …\nA hint to the server to request inlining stdout in the …\nWhen the worker finished fetching action inputs.\nWhen the worker started fetching action inputs.\nThe digest of the root [Directory]…\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nThe instance of the execution system to operate against. A …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nTrue if file is executable, false otherwise.\nTrue if file is executable, false otherwise.\nIf set, consumers MAY make the following assumptions about …\nEarliest non-deprecated RE API version supported.\nMaximum total size of blobs to be uploaded/downloaded using\nFreeform informational message with details on the …\nA list of the blobs requested <em>not</em> present in the storage.\nThe file’s last modification timestamp.\nThe property name.\nThe name of the file.\nThe name of the directory.\nThe name of the symlink.\nThe name of the [Operation][google.longrunning.Operation] …\nIf present, signifies that there are more results which …\nA list of the output directories that the client expects …\nThe output directories of the action. For each output …\nThe output directories of the action that are symbolic …\nThe output files of the action that are symbolic links to …\nA list of the output files that the client expects to …\nThe output files of the action. For each output file …\nA list of keys for node properties the client expects to …\nA list of the output paths that the client expects to …\nNew in v2.1: this field will only be populated if the …\nWhen the worker finished uploading action outputs.\nWhen the worker started uploading action outputs.\nA maximum page size to request. If present, the server …\nA page token, which must be a value received in a previous …\nThe full path of the file relative to the working …\nThe full path of the directory relative to the working …\nThe full path of the symlink relative to the working …\nNested message and enum types in <code>Platform</code>.\nThe optional platform requirements for the execution …\nThe platform requirements for the execution environment. …\nThe priority (relative importance) of this action. …\nThe priority (relative importance) of this content in the …\nNested message and enum types in <code>PriorityCapabilities</code>.\nThe properties that make up this platform. In order to …\nA list of string-based [NodeProperties]…\nAppends the provided enum value to <code>acceptable_compressors</code>.\nAppends the provided enum value to <code>digest_functions</code>.\nAppends the provided enum value to …\nAppends the provided enum value to <code>supported_compressors</code>.\nWhen was the action added to the queue.\nThe individual upload requests.\nThe responses to the requests.\nThe responses to the requests.\nThe result of the action.\nAn optional policy for the results of this execution in …\nAn optional policy for the results of this execution in …\nThe root directory in the tree.\nThe digest of the root, which must be an encoded [Directory…\nAn optional additional salt value used to place this <code>Action</code>…\nAn optional list of additional log outputs the server …\nSets <code>digest_function</code> to the provided enum value.\nSets <code>stage</code> to the provided enum value.\nSets <code>symlink_absolute_path_strategy</code> to the provided enum …\nThe size of the blob, in bytes.\nIf true, the action will be executed even if its result is …\nReturns the enum value of <code>stage</code>, or the default if the …\nThe current stage of execution.\nIf the status has a code other than <code>OK</code>, it indicates that …\nThe digest for a blob containing the standard error of the …\nThe standard error buffer of the action. The server SHOULD …\nIf set, the client can use this resource name with …\nThe digest for a blob containing the standard output of …\nThe standard output buffer of the action. The server …\nIf set, the client can use this resource name with …\nReturns an iterator which yields the valid enum values …\nCompressors supported for inlined data in [BatchUpdateBlobs…\nReturns an iterator which yields the valid enum values …\nCompressors supported by the “compressed-blobs” …\nSupported node properties.\nNested message and enum types in …\nReturns the enum value of <code>symlink_absolute_path_strategy</code>, …\nWhether absolute symlink targets are supported.\nThe symlinks in the directory.\nThe target path of the symlink. The path separator is a …\nThe target path of the symlink. The path separator is a …\nAn identifier for the target which produced this action. …\nA timeout after which the execution should be killed. If …\nThe details for the tool invoking the requests.\nAn identifier that ties multiple actions together to a …\nName of the tool, e.g. bazel.\nVersion of the tool used for the request, e.g. 5.0.3.\nThe digest of the encoded [Tree]…\nThe UNIX file mode, e.g., 0755.\nThe property value.\nNew in v2.3: the amount of time the worker spent executing …\nThe name of the worker which ran the execution.\nWhen the worker completed the action, including all stages.\nWhen the worker received the action.\nThe working directory, relative to the input root, for the …\nThe action cache API is used to query whether a given …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nRetrieve a cached execution result.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nUpload a new execution result.\nGenerated trait containing gRPC methods that should be …\nThe action cache API is used to query whether a given …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nRetrieve a cached execution result.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nUpload a new execution result.\nA response corresponding to a single blob that the client …\nReturns the enum value of <code>compressor</code>, or the default if …\nThe format the data is encoded in. MUST be <code>IDENTITY</code>…\nThe raw binary data.\nThe digest to which this response corresponds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets <code>compressor</code> to the provided enum value.\nThe result of attempting to download that blob.\nA request corresponding to a single blob that the client …\nReturns the enum value of <code>compressor</code>, or the default if …\nThe format of <code>data</code>. Must be <code>IDENTITY</code>/unspecified, or one …\nThe raw binary data.\nThe digest of the blob. This MUST be the digest of <code>data</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nSets <code>compressor</code> to the provided enum value.\nA response corresponding to a single blob that the client …\nThe blob digest to which this response corresponds.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe result of attempting to upload that blob.\nThe Capabilities service may be used by remote execution …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nGetCapabilities returns the server capabilities …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nThe Capabilities service may be used by remote execution …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nGetCapabilities returns the server capabilities …\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nAn <code>EnvironmentVariable</code> is one variable to set in the …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe variable name.\nThe variable value.\nRFC 1951 Deflate. This format is identical to what is used …\nNo compression. Servers and clients MUST always support …\nZstandard compression.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Value</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Value</code>.\nThe CAS (content-addressable storage) is used to store the …\nEnable decompressing responses.\nDownload many blobs at once.\nUpload many blobs at once.\nAttempt to create a new client by connecting to a given …\nDetermine if blobs are present in the CAS.\nReturns the argument unchanged.\nFetch the entire directory tree rooted at a node.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nThe CAS (content-addressable storage) is used to store the …\nServer streaming response type for the GetTree method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nDownload many blobs at once.\nUpload many blobs at once.\nDetermine if blobs are present in the CAS.\nReturns the argument unchanged.\nFetch the entire directory tree rooted at a node.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nThe MD5 digest function.\nMurmur3 128-bit digest function, x64 variant. Note that …\nThe SHA-1 digest function.\nThe SHA-256 digest function.\nThe SHA-384 digest function.\nThe SHA-512 digest function.\nIt is an error for the server to return this value.\nThe Microsoft “VSO-Hash” paged SHA256 digest function. …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Value</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Value</code>.\nThe Remote Execution API is used to execute an [Action]…\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nExecute an action remotely.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nWait for an execution operation to complete. When the …\nServer streaming response type for the Execute method.\nGenerated trait containing gRPC methods that should be …\nThe Remote Execution API is used to execute an [Action]…\nGenerated gRPC service name\nServer streaming response type for the WaitExecution …\nEnable decompressing requests with the given encoding.\nExecute an action remotely.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nWait for an execution operation to complete. When the …\nChecking the result against the cache.\nFinished execution.\nCurrently being executed by a worker.\nCurrently idle, awaiting a free machine to execute.\nInvalid value.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Value</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Value</code>.\nA single property for the environment. The server is …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe property name.\nThe property value.\nSupported range of priorities, including boundaries.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe maximum numeric value for this priority range, which …\nThe minimum numeric value for this priority range, which …\nServer will allow symlink targets to escape the input root …\nServer will return an <code>INVALID_ARGUMENT</code> on input symlinks …\nInvalid value.\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Value</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Value</code>.\nThe full version of a given tool.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe major version, e.g 10 for 10.2.3.\nThe minor version, e.g. 2 for 10.2.3.\nThe patch version, e.g 3 for 10.2.3.\nThe pre-release version. Either this field or …\nA custom pattern is used for defining custom HTTP verb.\nDefines the HTTP configuration for an API service. It …\ngRPC Transcoding\nAdditional HTTP bindings for the selector. Nested bindings …\nThe name of the request field whose value is mapped to the …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nWhen set to true, URL path parameters will be fully …\nNested message and enum types in <code>HttpRule</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe name of this custom HTTP verb.\nThe path matched by this custom verb.\nDetermines the URL pattern is matched by this rules. This …\nOptional. The name of the response field whose value is …\nA list of HTTP configuration rules that apply to …\nSelects a method to which this rule applies.\nThe custom pattern is used for specifying an HTTP method …\nMaps to HTTP DELETE. Used for deleting a resource.\nMaps to HTTP GET. Used for listing and getting information …\nMaps to HTTP PATCH. Used for updating a resource.\nDetermines the URL pattern is matched by this rules. This …\nMaps to HTTP POST. Used for creating a resource or …\nMaps to HTTP PUT. Used for replacing a resource.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nRequest object for ByteStream.QueryWriteStatus.\nResponse object for ByteStream.QueryWriteStatus.\nRequest object for ByteStream.Read.\nResponse object for ByteStream.Read.\nRequest object for ByteStream.Write.\nResponse object for ByteStream.Write.\nGenerated client implementations.\nGenerated server implementations.\nThe number of bytes that have been processed for the given …\nThe number of bytes that have been processed for the given …\n<code>complete</code> is <code>true</code> only if the client has sent a <code>WriteRequest</code>…\nA portion of the data for the resource. The service <strong>may</strong> …\nA portion of the data for the resource. The client <strong>may</strong> …\nIf <code>true</code>, this indicates that the write is complete. …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe maximum number of <code>data</code> bytes the server is allowed to …\nThe offset for the first byte to return in the read, …\nThe name of the resource to read.\nThe name of the resource to write. This <strong>must</strong> be set on the …\nThe name of the resource whose write status is being …\nThe offset from the beginning of the resource at which the …\nIntroduction\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\n<code>QueryWriteStatus()</code> is used to find the <code>committed_size</code> for …\n<code>Read()</code> is used to retrieve the contents of a resource as a …\nCompress requests with the given encoding.\n<code>Write()</code> is used to send the contents of a resource as a …\nGenerated trait containing gRPC methods that should be …\nIntroduction\nServer streaming response type for the Read method.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\n<code>QueryWriteStatus()</code> is used to find the <code>committed_size</code> for …\n<code>Read()</code> is used to retrieve the contents of a resource as a …\nCompress responses with the given encoding, if the client …\n<code>Write()</code> is used to send the contents of a resource as a …\nThe request message for [Operations.CancelOperation]…\nThe request message for [Operations.DeleteOperation]…\nThe request message for [Operations.GetOperation]…\nThe request message for [Operations.ListOperations]…\nThe response message for [Operations.ListOperations]…\nThis resource represents a long-running operation that is …\nA message representing the message types used by a …\nThe request message for [Operations.WaitOperation]…\nIf the value is <code>false</code>, it means the operation is still in …\nThe standard list filter.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nService-specific metadata associated with the operation.  …\nRequired. The message name of the metadata type for this …\nThe server-assigned name, which is only unique within the …\nThe name of the operation resource.\nThe name of the operation’s parent resource.\nThe name of the operation resource to be cancelled.\nThe name of the operation resource to be deleted.\nThe name of the operation resource to wait on.\nThe standard List next-page token.\nNested message and enum types in <code>Operation</code>.\nA list of operations that matches the specified filter in …\nGenerated client implementations.\nGenerated server implementations.\nThe standard list page size.\nThe standard list page token.\nRequired. The message name of the primary return type for …\nThe operation result, which can be either an <code>error</code> or a …\nThe maximum duration to wait before timing out. If left …\nThe error result of the operation in case of failure or …\nThe normal response of the operation in case of success.  …\nThe operation result, which can be either an <code>error</code> or a …\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nManages long-running operations with an API service.\nEnable decompressing responses.\nStarts asynchronous cancellation on a long-running …\nAttempt to create a new client by connecting to a given …\nDeletes a long-running operation. This method indicates …\nReturns the argument unchanged.\nGets the latest state of a long-running operation.  …\nCalls <code>U::from(self)</code>.\nLists operations that match the specified filter in the …\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nWaits until the specified long-running operation is done …\nGenerated trait containing gRPC methods that should be …\nManages long-running operations with an API service.\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nStarts asynchronous cancellation on a long-running …\nDeletes a long-running operation. This method indicates …\nReturns the argument unchanged.\nGets the latest state of a long-running operation.  …\nCalls <code>U::from(self)</code>.\nLists operations that match the specified filter in the …\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …\nWaits until the specified long-running operation is done …\nThe operation was aborted, typically due to a concurrency …\nThe entity that a client attempted to create (e.g., file …\nThe operation was cancelled, typically by the caller.\nThe canonical error codes for gRPC APIs.\nUnrecoverable data loss or corruption.\nThe deadline expired before the operation could complete. …\nThe operation was rejected because the system is not in a …\nInternal errors.  This means that some invariants expected …\nThe client specified an invalid argument.  Note that this …\nSome requested entity (e.g., file or directory) was not …\nNot an error; returned on success\nThe operation was attempted past the valid range.  E.g., …\nThe caller does not have permission to execute the …\nSome resource has been exhausted, perhaps a per-user …\nThe <code>Status</code> type defines a logical error model that is …\nThe request does not have valid authentication credentials …\nThe service is currently unavailable.  This is most likely …\nThe operation is not implemented or is not …\nUnknown error.  For example, this error may be returned …\nString value of the enum field names used in the ProtoBuf …\nThe status code, which should be an enum value of …\nA list of messages that carry the error details.  There is …\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>Code</code>, or <code>None</code> if <code>value</code> is not a valid …\nCreates an enum from field names used in the ProtoBuf …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Code</code>.\nA developer-facing error message, which should be in …")