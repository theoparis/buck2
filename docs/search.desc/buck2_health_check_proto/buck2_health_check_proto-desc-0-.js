searchState.loadedDescShard("buck2_health_check_proto", 0, "A report that can be displayed to the user, typically on …\nEvent to update the HealthCheckContext in the server. This …\nType of health check.\n/ Remediation for an issue reported by a health check.\nSeverity of an issue reported by a health check.\nString value of the enum field names used in the ProtoBuf …\nString value of the enum field names used in the ProtoBuf …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>HealthCheckType</code>, or <code>None</code> if <code>value</code> is …\nConverts an <code>i32</code> to a <code>Severity</code>, or <code>None</code> if <code>value</code> is not a …\nCreates an enum from field names used in the ProtoBuf …\nCreates an enum from field names used in the ProtoBuf …\nGenerated client implementations.\nNested message and enum types in <code>HealthCheckContextEvent</code>.\nGenerated server implementations.\nReturns the enum value of <code>health_check_type</code>, or the …\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>HealthCheckType</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>Severity</code>.\nA human readable description of the issue.\nNested message and enum types in <code>Remediation</code>.\nThis is optional because some health checks may not have a …\nSets <code>health_check_type</code> to the provided enum value.\nSets <code>severity</code> to the provided enum value.\nReturns the enum value of <code>severity</code>, or the default if the …\nReturns the value of <code>tag</code>, or the default value if <code>tag</code> is …\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nRun health checks and return the result. Existing health …\nCompress requests with the given encoding.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nRun health checks and return the result. Existing health …\nCompress responses with the given encoding, if the client …\nA hyperlink to a page containing more details and …\nA message to display to the user.\nEncodes the message to a buffer.\nReturns the encoded length of the message without a length …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nDecodes an instance of the message from a buffer, and …")