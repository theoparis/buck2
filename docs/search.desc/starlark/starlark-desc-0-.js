searchState.loadedDescShard("starlark", 0, "This file provides an implementation of <code>LspContext</code> …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nstarlark-rust does not support panic. Terminate on panic …\nOptions for resolving filesystem completions.\nStarting point for resolving filesystem completions.\nAttempted to resolve a relative path, but no …\nAttempted to get the filename of a path that does not seem …\nReceived a load for an absolute path from the root of the …\nThe provided Url was not absolute and it needs to be.\nA resolved path, e.g. from an opened document.\nErrors when <code>LspContext::render_as_load()</code> cannot render a …\nErrors when <code>LspContext::resolve_load()</code> cannot resolve a …\nAn unresolved path, e.g. from a string literal in a <code>load</code> …\nThe path contained a target name that does not resolve to …\nThe path contained a repository name that is not known to …\nThe scheme provided was not correct or supported.\nThe scheme provided was not correct or supported.\nThe scheme provided was not correct or supported.\nWhether to include directories in the results.\nWhether to include files in the results.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nModule for parsing bazel labels\nFinds the directory that is the root of a package, given a …\nWhether to include target names from BUILD files.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLowest level stream communication as JSON. Because DAP …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nThe outcome of evaluating (checking, parsing or running) …\nAttempted to resolve a relative path, but no …\nThe provided Url was not absolute and it needs to be.\nErrors when <code>LspContext::resolve_load()</code> cannot resolve a …\nThe scheme provided was not correct or supported.\nThe scheme provided was not correct or supported.\nIf the code is only parsed, not run, and there were no …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nThe diagnostic and error messages from evaluating a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nGlob pattern to match the suppression rule on.\nList of rules to be suppressed. This should be the name …")