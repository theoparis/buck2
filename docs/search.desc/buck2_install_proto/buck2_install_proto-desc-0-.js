searchState.loadedDescShard("buck2_install_proto", 0, "Metadata about a connected device for logging. ex. device …\nErrors that may be triggered by issues with the host, …\nShould be kept in sync with buck2_error::ErrorTier.\nExpected errors in inputs explicitly tracked by buck. AKA …\nUnexpected errors in installer. AKA Infra error.\nString value of the enum field names used in the ProtoBuf …\nReturns the enum value of <code>category</code>, or the default if the …\nHigh level error category. Determines error_category …\nNested message and enum types in <code>DeviceMetadata</code>.\nConnected device metadata to be logged to scuba. Should be …\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nReturns the argument unchanged.\nConverts an <code>i32</code> to a <code>ErrorCategory</code>, or <code>None</code> if <code>value</code> is …\nCreates an enum from field names used in the ProtoBuf …\nGenerated client implementations.\nGenerated server implementations.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nReturns <code>true</code> if <code>value</code> is a variant of <code>ErrorCategory</code>.\nError message\nSets <code>category</code> to the provided enum value.\nList of short, stable error identifiers. Should be …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nEnable decompressing responses.\nAttempt to create a new client by connecting to a given …\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress requests with the given encoding.\nGenerated trait containing gRPC methods that should be …\nGenerated gRPC service name\nEnable decompressing requests with the given encoding.\nReturns the argument unchanged.\nCalls <code>U::from(self)</code>.\nLimits the maximum size of a decoded message.\nLimits the maximum size of an encoded message.\nCompress responses with the given encoding, if the client …")