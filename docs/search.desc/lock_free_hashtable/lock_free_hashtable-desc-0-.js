searchState.loadedDescShard("lock_free_hashtable", 0, "(Almost) lock-free insertion only hashtable.\nDescribes the types we can store in <code>LockFreeRawTable</code>.\n(Almost) lock-free insertion only hashtable.\nSharded (almost) lock-free hashtable.\nGeneralized non-null pointer.\nThe value stored in the table.\nRaw pointers stored in the table.\nDereferenced value.\nDereference the raw pointer.\nReturns the argument unchanged.\nConstruct the value from the raw pointer.\nCalls <code>U::from(self)</code>.\nObtain the raw pointer. It must be non-null.\nCheck if the value is null.\nNull value. This is stored in <code>LockFreeRawTable</code> when the â€¦\nIterator over the entries.\n(Almost) lock-free insertion only hashtable.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert an entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of entries in the table is zero.\nIterate over all entries.\nNumber of entries in the table.\nFind an entry.\nEmpty table.\nIterator over all entries in sharded raw table.\nLock-free hashtable sharded by key hash.\nReturns the argument unchanged.\nReturns the argument unchanged.\nInsert an entry.\nCalls <code>U::from(self)</code>.\nCalls <code>U::from(self)</code>.\nNumber of entries in the table is zero.\nIterate entries in unspecified order.\nNumber of entries in the table.\nFind an entry.\nCreate a new empty hashtable.")