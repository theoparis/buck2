(function() {
    var type_impls = Object.fromEntries([["starlark",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllocFrozenValue-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#449-453\">Source</a><a href=\"#impl-AllocFrozenValue-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/values/trait.AllocFrozenValue.html\" title=\"trait starlark::values::AllocFrozenValue\">AllocFrozenValue</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc_frozen_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#450-452\">Source</a><a href=\"#method.alloc_frozen_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.AllocFrozenValue.html#tymethod.alloc_frozen_value\" class=\"fn\">alloc_frozen_value</a>(self, _heap: &amp;<a class=\"struct\" href=\"starlark/values/struct.FrozenHeap.html\" title=\"struct starlark::values::FrozenHeap\">FrozenHeap</a>) -&gt; <a class=\"struct\" href=\"starlark/values/struct.FrozenValue.html\" title=\"struct starlark::values::FrozenValue\">FrozenValue</a></h4></section></summary><div class='docblock'>Allocate a value in the frozen heap and return a reference to the allocated value.</div></details></div></details>","AllocFrozenValue","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AllocValue%3C'v%3E-for-FrozenValueTyped%3C'f,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#437-441\">Source</a><a href=\"#impl-AllocValue%3C'v%3E-for-FrozenValueTyped%3C'f,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, 'f, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'f&gt;&gt; <a class=\"trait\" href=\"starlark/values/trait.AllocValue.html\" title=\"trait starlark::values::AllocValue\">AllocValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'f, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.alloc_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#438-440\">Source</a><a href=\"#method.alloc_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.AllocValue.html#tymethod.alloc_value\" class=\"fn\">alloc_value</a>(self, _heap: &amp;'v <a class=\"struct\" href=\"starlark/values/struct.Heap.html\" title=\"struct starlark::values::Heap\">Heap</a>) -&gt; <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;</h4></section></summary><div class='docblock'>Allocate the value on a heap and return a reference to the allocated value. <a href=\"starlark/values/trait.AllocValue.html#tymethod.alloc_value\">Read more</a></div></details></div></details>","AllocValue<'v>","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Allocative-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#78\">Source</a><a href=\"#impl-Allocative-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; Allocative for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.visit\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#78\">Source</a><a href=\"#method.visit\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a class=\"fn\">visit</a>&lt;'allocative_a, 'allocative_b: 'allocative_a&gt;(\n    &amp;self,\n    visitor: &amp;'allocative_a mut Visitor&lt;'allocative_b&gt;,\n)</h4></section></div></details>","Allocative","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#78\">Source</a><a href=\"#impl-Clone-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#78\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; Self</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#113-117\">Source</a><a href=\"#impl-Debug-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#114-116\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#357-364\">Source</a><a href=\"#impl-Deref-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#358\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#361-363\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#125-129\">Source</a><a href=\"#impl-Display-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#126-128\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"https://doc.rust-lang.org/nightly/core/fmt/type.Result.html\" title=\"type core::fmt::Result\">Result</a></h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dupe-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#78\">Source</a><a href=\"#impl-Dupe-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"dupe/trait.Dupe.html\" title=\"trait dupe::Dupe\">Dupe</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><section id=\"method.dupe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dupe/lib.rs.html#36\">Source</a><a href=\"#method.dupe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dupe/trait.Dupe.html#method.dupe\" class=\"fn\">dupe</a>(&amp;self) -&gt; Self</h4></section></div></details>","Dupe","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Freeze-for-FrozenValueTyped%3C'static,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#99-105\">Source</a><a href=\"#impl-Freeze-for-FrozenValueTyped%3C'static,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'static&gt;&gt; <a class=\"trait\" href=\"starlark/values/trait.Freeze.html\" title=\"trait starlark::values::Freeze\">Freeze</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'static, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Frozen\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#100\">Source</a><a href=\"#associatedtype.Frozen\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"starlark/values/trait.Freeze.html#associatedtype.Frozen\" class=\"associatedtype\">Frozen</a> = <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'static, T&gt;</h4></section></summary><div class='docblock'>When type is frozen, it is frozen into this type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.freeze\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#102-104\">Source</a><a href=\"#method.freeze\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.Freeze.html#tymethod.freeze\" class=\"fn\">freeze</a>(self, _freezer: &amp;<a class=\"struct\" href=\"starlark/values/struct.Freezer.html\" title=\"struct starlark::values::Freezer\">Freezer</a>&lt;'_&gt;) -&gt; <a class=\"type\" href=\"starlark/values/type.FreezeResult.html\" title=\"type starlark::values::FreezeResult\">FreezeResult</a>&lt;Self::<a class=\"associatedtype\" href=\"starlark/values/trait.Freeze.html#associatedtype.Frozen\" title=\"type starlark::values::Freeze::Frozen\">Frozen</a>&gt;</h4></section></summary><div class='docblock'>Freeze a value. The frozen value <em>must</em> be equal to the original,\nand produce the same hash. <a href=\"starlark/values/trait.Freeze.html#tymethod.freeze\">Read more</a></div></details></div></details>","Freeze","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FrozenValueTyped%3C'v,+StarlarkStr%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#341-347\">Source</a><a href=\"#impl-FrozenValueTyped%3C'v,+StarlarkStr%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v&gt; <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, <a class=\"struct\" href=\"starlark/values/string/struct.StarlarkStr.html\" title=\"struct starlark::values::string::StarlarkStr\">StarlarkStr</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_str\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#344-346\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.as_str\" class=\"fn\">as_str</a>(self) -&gt; &amp;'v <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a></h4></section></summary><div class=\"docblock\"><p>Get the Rust string reference.</p>\n</div></details></div></details>",0,"starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#237-331\">Source</a><a href=\"#impl-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#248-251\">Source</a><h4 class=\"code-header\">pub unsafe fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.new_unchecked\" class=\"fn\">new_unchecked</a>(value: <a class=\"struct\" href=\"starlark/values/struct.FrozenValue.html\" title=\"struct starlark::values::FrozenValue\">FrozenValue</a>) -&gt; <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h4></section></summary><div class=\"docblock\"><p>Construct <code>FrozenValueTyped</code> without checking that the value is of correct type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#255-258\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.new\" class=\"fn\">new</a>(value: <a class=\"struct\" href=\"starlark/values/struct.FrozenValue.html\" title=\"struct starlark::values::FrozenValue\">FrozenValue</a>) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;<a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Downcast.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.new_err\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#262-265\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.new_err\" class=\"fn\">new_err</a>(value: <a class=\"struct\" href=\"starlark/values/struct.FrozenValue.html\" title=\"struct starlark::values::FrozenValue\">FrozenValue</a>) -&gt; <a class=\"type\" href=\"starlark/type.Result.html\" title=\"type starlark::Result\">Result</a>&lt;<a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;&gt;</h4></section></summary><div class=\"docblock\"><p>Downcast.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_frozen_value\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#278-280\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.to_frozen_value\" class=\"fn\">to_frozen_value</a>(self) -&gt; <a class=\"struct\" href=\"starlark/values/struct.FrozenValue.html\" title=\"struct starlark::values::FrozenValue\">FrozenValue</a></h4></section></summary><div class=\"docblock\"><p>Erase the type.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#284-286\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.to_value\" class=\"fn\">to_value</a>(self) -&gt; <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;</h4></section></summary><div class=\"docblock\"><p>Convert to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value_typed\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#290-292\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.to_value_typed\" class=\"fn\">to_value_typed</a>(self) -&gt; <a class=\"struct\" href=\"starlark/values/struct.ValueTyped.html\" title=\"struct starlark::values::ValueTyped\">ValueTyped</a>&lt;'v, T&gt;</h4></section></summary><div class=\"docblock\"><p>Convert to the value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.as_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#296-319\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;'v T</a></h4></section></summary><div class=\"docblock\"><p>Get the reference to the pointed value.</p>\n</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.to_value_of_unchecked\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#328-330\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/values/struct.FrozenValueTyped.html#tymethod.to_value_of_unchecked\" class=\"fn\">to_value_of_unchecked</a>(self) -&gt; <a class=\"type\" href=\"starlark/values/type.FrozenValueOfUnchecked.html\" title=\"type starlark::values::FrozenValueOfUnchecked\">FrozenValueOfUnchecked</a>&lt;'v, T&gt;</h4></section></summary><div class=\"docblock\"><p>Convert to another <code>FrozenValue</code> wrapper.</p>\n</div></details></div></details>",0,"starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#170-174\">Source</a><a href=\"#impl-PartialEq-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#171-173\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;Self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ProvidesStaticType%3C'v%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#81\">Source</a><a href=\"#impl-ProvidesStaticType%3C'v%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt; + <a class=\"trait\" href=\"starlark/any/trait.ProvidesStaticType.html\" title=\"trait starlark::any::ProvidesStaticType\">ProvidesStaticType</a>&lt;'v&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>&gt; <a class=\"trait\" href=\"starlark/any/trait.ProvidesStaticType.html\" title=\"trait starlark::any::ProvidesStaticType\">ProvidesStaticType</a>&lt;'v&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;<div class=\"where\">where\n    T::<a class=\"associatedtype\" href=\"starlark/any/trait.ProvidesStaticType.html#associatedtype.StaticType\" title=\"type starlark::any::ProvidesStaticType::StaticType\">StaticType</a>: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'static&gt; + <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.StaticType\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#81\">Source</a><a href=\"#associatedtype.StaticType\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"starlark/any/trait.ProvidesStaticType.html#associatedtype.StaticType\" class=\"associatedtype\">StaticType</a> = <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'static, &lt;T as <a class=\"trait\" href=\"starlark/any/trait.ProvidesStaticType.html\" title=\"trait starlark::any::ProvidesStaticType\">ProvidesStaticType</a>&lt;'v&gt;&gt;::<a class=\"associatedtype\" href=\"starlark/any/trait.ProvidesStaticType.html#associatedtype.StaticType\" title=\"type starlark::any::ProvidesStaticType::StaticType\">StaticType</a>&gt;</h4></section></summary><div class='docblock'>Same type as <code>Self</code> but with lifetimes dropped to <code>'static</code>. <a href=\"starlark/any/trait.ProvidesStaticType.html#associatedtype.StaticType\">Read more</a></div></details></div></details>","ProvidesStaticType<'v>","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Serialize-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#140-147\">Source</a><a href=\"#impl-Serialize-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html\" title=\"trait serde::ser::Serialize\">Serialize</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.serialize\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#141-146\">Source</a><a href=\"#method.serialize\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\" class=\"fn\">serialize</a>&lt;S&gt;(&amp;self, serializer: S) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Ok\" title=\"type serde::ser::Serializer::Ok\">Ok</a>, S::<a class=\"associatedtype\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html#associatedtype.Error\" title=\"type serde::ser::Serializer::Error\">Error</a>&gt;<div class=\"where\">where\n    S: <a class=\"trait\" href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serializer.html\" title=\"trait serde::ser::Serializer\">Serializer</a>,</div></h4></section></summary><div class='docblock'>Serialize this value into the given Serde serializer. <a href=\"https://docs.rs/serde/1.0.219/serde/ser/trait.Serialize.html#tymethod.serialize\">Read more</a></div></details></div></details>","Serialize","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StarlarkTypeRepr-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#403-409\">Source</a><a href=\"#impl-StarlarkTypeRepr-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/values/type_repr/trait.StarlarkTypeRepr.html\" title=\"trait starlark::values::type_repr::StarlarkTypeRepr\">StarlarkTypeRepr</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Canonical\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#404\">Source</a><a href=\"#associatedtype.Canonical\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"starlark/values/type_repr/trait.StarlarkTypeRepr.html#associatedtype.Canonical\" class=\"associatedtype\">Canonical</a> = &lt;T as <a class=\"trait\" href=\"starlark/values/type_repr/trait.StarlarkTypeRepr.html\" title=\"trait starlark::values::type_repr::StarlarkTypeRepr\">StarlarkTypeRepr</a>&gt;::<a class=\"associatedtype\" href=\"starlark/values/type_repr/trait.StarlarkTypeRepr.html#associatedtype.Canonical\" title=\"type starlark::values::type_repr::StarlarkTypeRepr::Canonical\">Canonical</a></h4></section></summary><div class='docblock'>Different Rust type representing the same Starlark Type. <a href=\"starlark/values/type_repr/trait.StarlarkTypeRepr.html#associatedtype.Canonical\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.starlark_type_repr\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#406-408\">Source</a><a href=\"#method.starlark_type_repr\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/type_repr/trait.StarlarkTypeRepr.html#tymethod.starlark_type_repr\" class=\"fn\">starlark_type_repr</a>() -&gt; <a class=\"struct\" href=\"starlark/typing/struct.Ty.html\" title=\"struct starlark::typing::Ty\">Ty</a></h4></section></summary><div class='docblock'>The representation of a type that a user would use verbatim in starlark type annotations</div></details></div></details>","StarlarkTypeRepr","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Trace%3C'v%3E-for-FrozenValueTyped%3C'f,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#95-97\">Source</a><a href=\"#impl-Trace%3C'v%3E-for-FrozenValueTyped%3C'f,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, 'f, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'f&gt;&gt; <a class=\"trait\" href=\"starlark/values/trait.Trace.html\" title=\"trait starlark::values::Trace\">Trace</a>&lt;'v&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'f, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.trace\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#96\">Source</a><a href=\"#method.trace\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.Trace.html#tymethod.trace\" class=\"fn\">trace</a>(&amp;mut self, _tracer: &amp;<a class=\"struct\" href=\"starlark/values/struct.Tracer.html\" title=\"struct starlark::values::Tracer\">Tracer</a>&lt;'v&gt;)</h4></section></summary><div class='docblock'>Recursively “trace” the value. <a href=\"starlark/values/trait.Trace.html#tymethod.trace\">Read more</a></div></details></div></details>","Trace<'v>","starlark::values::layout::typed::string::FrozenStringValue"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-UnpackValue%3C'v%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#411-435\">Source</a><a href=\"#impl-UnpackValue%3C'v%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/values/trait.UnpackValue.html\" title=\"trait starlark::values::UnpackValue\">UnpackValue</a>&lt;'v&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Error\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#412\">Source</a><a href=\"#associatedtype.Error\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"starlark/values/trait.UnpackValue.html#associatedtype.Error\" class=\"associatedtype\">Error</a> = <a class=\"struct\" href=\"starlark/struct.Error.html\" title=\"struct starlark::Error\">Error</a></h4></section></summary><div class='docblock'>Error returned when type matches, but conversion fails. <a href=\"starlark/values/trait.UnpackValue.html#associatedtype.Error\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value_impl\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#414-434\">Source</a><a href=\"#method.unpack_value_impl\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.UnpackValue.html#tymethod.unpack_value_impl\" class=\"fn\">unpack_value_impl</a>(value: <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;) -&gt; <a class=\"type\" href=\"starlark/type.Result.html\" title=\"type starlark::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;&gt;</h4></section></summary><div class='docblock'>Given a <a href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\"><code>Value</code></a>, try and unpack it into the given type,\nwhich may involve some element of conversion. <a href=\"starlark/values/trait.UnpackValue.html#tymethod.unpack_value_impl\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/unpack.rs.html#175-177\">Source</a><a href=\"#method.unpack_value\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.UnpackValue.html#method.unpack_value\" class=\"fn\">unpack_value</a>(value: <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/option/enum.Option.html\" title=\"enum core::option::Option\">Option</a>&lt;Self&gt;, <a class=\"struct\" href=\"starlark/struct.Error.html\" title=\"struct starlark::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Given a <a href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\"><code>Value</code></a>, try and unpack it into the given type,\nwhich may involve some element of conversion. <a href=\"starlark/values/trait.UnpackValue.html#method.unpack_value\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_value_err\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/unpack.rs.html#192-203\">Source</a><a href=\"#method.unpack_value_err\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.UnpackValue.html#method.unpack_value_err\" class=\"fn\">unpack_value_err</a>(value: <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;) -&gt; <a class=\"type\" href=\"starlark/type.Result.html\" title=\"type starlark::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Unpack a value, but return error instead of <code>None</code> if unpacking fails.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/unpack.rs.html#207-221\">Source</a><a href=\"#method.unpack_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.UnpackValue.html#method.unpack_param\" class=\"fn\">unpack_param</a>(value: <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;) -&gt; <a class=\"type\" href=\"starlark/type.Result.html\" title=\"type starlark::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Unpack value, but instead of <code>None</code> return error about incorrect argument type.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.unpack_named_param\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark/values/unpack.rs.html#225-249\">Source</a><a href=\"#method.unpack_named_param\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark/values/trait.UnpackValue.html#method.unpack_named_param\" class=\"fn\">unpack_named_param</a>(value: <a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;, param_name: &amp;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.str.html\">str</a>) -&gt; <a class=\"type\" href=\"starlark/type.Result.html\" title=\"type starlark::Result\">Result</a>&lt;Self&gt;</h4></section></summary><div class='docblock'>Unpack value, but instead of <code>None</code> return error about incorrect named argument type.</div></details></div></details>","UnpackValue<'v>","starlark::values::layout::typed::string::FrozenStringValue"],["<section id=\"impl-Coerce%3CFrozenValueTyped%3C'v,+T%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#87\">Source</a><a href=\"#impl-Coerce%3CFrozenValueTyped%3C'v,+T%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/coerce/trait.Coerce.html\" title=\"trait starlark::coerce::Coerce\">Coerce</a>&lt;<a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section>","Coerce<FrozenValueTyped<'v, T>>","starlark::values::layout::typed::string::FrozenStringValue"],["<section id=\"impl-Coerce%3CValue%3C'v%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#92\">Source</a><a href=\"#impl-Coerce%3CValue%3C'v%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/coerce/trait.Coerce.html\" title=\"trait starlark::coerce::Coerce\">Coerce</a>&lt;<a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section>","Coerce<Value<'v>>","starlark::values::layout::typed::string::FrozenStringValue"],["<section id=\"impl-CoerceKey%3CFrozenValueTyped%3C'v,+T%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#88-91\">Source</a><a href=\"#impl-CoerceKey%3CFrozenValueTyped%3C'v,+T%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/coerce/trait.CoerceKey.html\" title=\"trait starlark::coerce::CoerceKey\">CoerceKey</a>&lt;<a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section>","CoerceKey<FrozenValueTyped<'v, T>>","starlark::values::layout::typed::string::FrozenStringValue"],["<section id=\"impl-CoerceKey%3CValue%3C'v%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#93\">Source</a><a href=\"#impl-CoerceKey%3CValue%3C'v%3E%3E-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"starlark/coerce/trait.CoerceKey.html\" title=\"trait starlark::coerce::CoerceKey\">CoerceKey</a>&lt;<a class=\"struct\" href=\"starlark/values/struct.Value.html\" title=\"struct starlark::values::Value\">Value</a>&lt;'v&gt;&gt; for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section>","CoerceKey<Value<'v>>","starlark::values::layout::typed::string::FrozenStringValue"],["<section id=\"impl-Copy-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#78\">Source</a><a href=\"#impl-Copy-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section>","Copy","starlark::values::layout::typed::string::FrozenStringValue"],["<section id=\"impl-Eq-for-FrozenValueTyped%3C'v,+T%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark/values/layout/typed.rs.html#176\">Source</a><a href=\"#impl-Eq-for-FrozenValueTyped%3C'v,+T%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;'v, T: <a class=\"trait\" href=\"starlark/values/trait.StarlarkValue.html\" title=\"trait starlark::values::StarlarkValue\">StarlarkValue</a>&lt;'v&gt;&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"starlark/values/struct.FrozenValueTyped.html\" title=\"struct starlark::values::FrozenValueTyped\">FrozenValueTyped</a>&lt;'v, T&gt;</h3></section>","Eq","starlark::values::layout::typed::string::FrozenStringValue"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[49123]}