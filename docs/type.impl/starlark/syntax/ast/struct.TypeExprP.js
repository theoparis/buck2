(function() {
    var type_impls = Object.fromEntries([["starlark",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-TypeExprP%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/ast.rs.html#212\">Source</a><a href=\"#impl-Clone-for-TypeExprP%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> + <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,\n    &lt;P as <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>&gt;::<a class=\"associatedtype\" href=\"starlark/syntax/ast/trait.AstPayload.html#associatedtype.TypeExprPayload\" title=\"type starlark::syntax::ast::AstPayload::TypeExprPayload\">TypeExprPayload</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/ast.rs.html#212\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;P&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","starlark::syntax::ast::TypeExpr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-TypeExprP%3CP%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/ast.rs.html#212\">Source</a><a href=\"#impl-Debug-for-TypeExprP%3CP%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;P&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;P&gt;<div class=\"where\">where\n    P: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> + <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,\n    &lt;P as <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>&gt;::<a class=\"associatedtype\" href=\"starlark/syntax/ast/trait.AstPayload.html#associatedtype.TypeExprPayload\" title=\"type starlark::syntax::ast::AstPayload::TypeExprPayload\">TypeExprPayload</a>: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/ast.rs.html#212\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","starlark::syntax::ast::TypeExpr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Display-for-TypeExprP%3CAstNoPayload%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/ast.rs.html#621\">Source</a><a href=\"#impl-Display-for-TypeExprP%3CAstNoPayload%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html\" title=\"trait core::fmt::Display\">Display</a> for <a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.AstNoPayload.html\" title=\"struct starlark::syntax::ast::AstNoPayload\">AstNoPayload</a>&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/ast.rs.html#622\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Display.html#tymethod.fmt\">Read more</a></div></details></div></details>","Display","starlark::syntax::ast::TypeExpr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeExprP%3CA%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#251\">Source</a><a href=\"#impl-TypeExprP%3CA%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;A&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#252-255\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/syntax/ast/struct.TypeExprP.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;B&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>",0,"starlark::syntax::ast::TypeExpr"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[9373]}