(function() {
    var type_impls = Object.fromEntries([["starlark",[["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ArgumentPExt%3CA%3E-for-Spanned%3CArgumentP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#432\">Source</a><a href=\"#impl-ArgumentPExt%3CA%3E-for-Spanned%3CArgumentP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.ArgumentPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::ArgumentPExt\">ArgumentPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.ArgumentP.html\" title=\"enum starlark::syntax::ast::ArgumentP\">ArgumentP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#432\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.ArgumentPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.ArgumentP.html\" title=\"enum starlark::syntax::ast::ArgumentP\">ArgumentP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","ArgumentPExt<A>","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstArgument"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssignIdentPExt%3CA%3E-for-Spanned%3CAssignIdentP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#429\">Source</a><a href=\"#impl-AssignIdentPExt%3CA%3E-for-Spanned%3CAssignIdentP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AssignIdentPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::AssignIdentPExt\">AssignIdentPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.AssignIdentP.html\" title=\"struct starlark::syntax::ast::AssignIdentP\">AssignIdentP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#429\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.AssignIdentPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.AssignIdentP.html\" title=\"struct starlark::syntax::ast::AssignIdentP\">AssignIdentP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","AssignIdentPExt<A>","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstAssignIdent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-AssignTargetPExt%3CA%3E-for-Spanned%3CAssignTargetP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#428\">Source</a><a href=\"#impl-AssignTargetPExt%3CA%3E-for-Spanned%3CAssignTargetP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AssignTargetPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::AssignTargetPExt\">AssignTargetPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.AssignTargetP.html\" title=\"enum starlark::syntax::ast::AssignTargetP\">AssignTargetP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#428\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.AssignTargetPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.AssignTargetP.html\" title=\"enum starlark::syntax::ast::AssignTargetP\">AssignTargetP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","AssignTargetPExt<A>","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignTarget"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Clone-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-Clone-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html\" title=\"trait core::clone::Clone\">Clone</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#method.clone\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\" class=\"fn\">clone</a>(&amp;self) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;</h4></section></summary><div class='docblock'>Returns a duplicate of the value. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#tymethod.clone\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.clone_from\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/clone.rs.html#213-215\">Source</a></span><a href=\"#method.clone_from\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\" class=\"fn\">clone_from</a>(&amp;mut self, source: &amp;Self)</h4></section></summary><div class='docblock'>Performs copy-assignment from <code>source</code>. <a href=\"https://doc.rust-lang.org/nightly/core/clone/trait.Clone.html#method.clone_from\">Read more</a></div></details></div></details>","Clone","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Debug-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-Debug-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html\" title=\"trait core::fmt::Debug\">Debug</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.fmt\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#method.fmt\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\" class=\"fn\">fmt</a>(&amp;self, f: &amp;mut <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Formatter.html\" title=\"struct core::fmt::Formatter\">Formatter</a>&lt;'_&gt;) -&gt; <a class=\"enum\" href=\"https://doc.rust-lang.org/nightly/core/result/enum.Result.html\" title=\"enum core::result::Result\">Result</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.unit.html\">()</a>, <a class=\"struct\" href=\"https://doc.rust-lang.org/nightly/core/fmt/struct.Error.html\" title=\"struct core::fmt::Error\">Error</a>&gt;</h4></section></summary><div class='docblock'>Formats the value using the given formatter. <a href=\"https://doc.rust-lang.org/nightly/core/fmt/trait.Debug.html#tymethod.fmt\">Read more</a></div></details></div></details>","Debug","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Deref-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#177\">Source</a><a href=\"#impl-Deref-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html\" title=\"trait core::ops::deref::Deref\">Deref</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle\" open><summary><section id=\"associatedtype.Target\" class=\"associatedtype trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#178\">Source</a><a href=\"#associatedtype.Target\" class=\"anchor\">§</a><h4 class=\"code-header\">type <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#associatedtype.Target\" class=\"associatedtype\">Target</a> = T</h4></section></summary><div class='docblock'>The resulting type after dereferencing.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#180\">Source</a><a href=\"#method.deref\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.Deref.html#tymethod.deref\" class=\"fn\">deref</a>(&amp;self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a></h4></section></summary><div class='docblock'>Dereferences the value.</div></details></div></details>","Deref","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-DerefMut-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#185\">Source</a><a href=\"#impl-DerefMut-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html\" title=\"trait core::ops::deref::DerefMut\">DerefMut</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.deref_mut\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#186\">Source</a><a href=\"#method.deref_mut\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/ops/deref/trait.DerefMut.html#tymethod.deref_mut\" class=\"fn\">deref_mut</a>(&amp;mut self) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut T</a></h4></section></summary><div class='docblock'>Mutably dereferences the value.</div></details></div></details>","DerefMut","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Dupe-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-Dupe-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"dupe/trait.Dupe.html\" title=\"trait dupe::Dupe\">Dupe</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"dupe/trait.Dupe.html\" title=\"trait dupe::Dupe\">Dupe</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.dupe\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/dupe/lib.rs.html#36\">Source</a><a href=\"#method.dupe\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"dupe/trait.Dupe.html#method.dupe\" class=\"fn\">dupe</a>(&amp;self) -&gt; Self</h4></section></div></details>","Dupe","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ExprPExt%3CA%3E-for-Spanned%3CExprP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#426\">Source</a><a href=\"#impl-ExprPExt%3CA%3E-for-Spanned%3CExprP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.ExprPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::ExprPExt\">ExprPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.ExprP.html\" title=\"enum starlark::syntax::ast::ExprP\">ExprP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#426\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.ExprPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.ExprP.html\" title=\"enum starlark::syntax::ast::ExprP\">ExprP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","ExprPExt<A>","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstExpr"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-FStringPExt%3CA%3E-for-Spanned%3CFStringP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#434\">Source</a><a href=\"#impl-FStringPExt%3CA%3E-for-Spanned%3CFStringP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.FStringPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::FStringPExt\">FStringPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.FStringP.html\" title=\"struct starlark::syntax::ast::FStringP\">FStringP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#434\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.FStringPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.FStringP.html\" title=\"struct starlark::syntax::ast::FStringP\">FStringP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","FStringPExt<A>","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstFString"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Hash-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-Hash-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html\" title=\"trait core::hash::Hash\">Hash</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#method.hash\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\" class=\"fn\">hash</a>&lt;__H&gt;(&amp;self, state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut __H</a>)<div class=\"where\">where\n    __H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,</div></h4></section></summary><div class='docblock'>Feeds this value into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#tymethod.hash\">Read more</a></div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.hash_slice\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.3.0\">1.3.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/hash/mod.rs.html#235-237\">Source</a></span><a href=\"#method.hash_slice\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\" class=\"fn\">hash_slice</a>&lt;H&gt;(data: &amp;[Self], state: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;mut H</a>)<div class=\"where\">where\n    H: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\">Hasher</a>,\n    Self: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Sized.html\" title=\"trait core::marker::Sized\">Sized</a>,</div></h4></section></summary><div class='docblock'>Feeds a slice of this type into the given <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hasher.html\" title=\"trait core::hash::Hasher\"><code>Hasher</code></a>. <a href=\"https://doc.rust-lang.org/nightly/core/hash/trait.Hash.html#method.hash_slice\">Read more</a></div></details></div></details>","Hash","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-IdentPExt%3CA%3E-for-Spanned%3CIdentP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#430\">Source</a><a href=\"#impl-IdentPExt%3CA%3E-for-Spanned%3CIdentP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.IdentPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::IdentPExt\">IdentPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.IdentP.html\" title=\"struct starlark::syntax::ast::IdentP\">IdentP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#430\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.IdentPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.IdentP.html\" title=\"struct starlark::syntax::ast::IdentP\">IdentP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","IdentPExt<A>","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstIdent"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-ParameterPExt%3CA%3E-for-Spanned%3CParameterP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#431\">Source</a><a href=\"#impl-ParameterPExt%3CA%3E-for-Spanned%3CParameterP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.ParameterPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::ParameterPExt\">ParameterPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.ParameterP.html\" title=\"enum starlark::syntax::ast::ParameterP\">ParameterP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#431\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.ParameterPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.ParameterP.html\" title=\"enum starlark::syntax::ast::ParameterP\">ParameterP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","ParameterPExt<A>","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstParameter"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-PartialEq-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-PartialEq-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html\" title=\"trait core::cmp::PartialEq\">PartialEq</a>,</div></h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.eq\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#method.eq\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#tymethod.eq\" class=\"fn\">eq</a>(&amp;self, other: &amp;<a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>self</code> and <code>other</code> values to be equal, and is used by <code>==</code>.</div></details><details class=\"toggle method-toggle\" open><summary><section id=\"method.ne\" class=\"method trait-impl\"><span class=\"rightside\"><span class=\"since\" title=\"Stable since Rust version 1.0.0\">1.0.0</span> · <a class=\"src\" href=\"https://doc.rust-lang.org/nightly/src/core/cmp.rs.html#265\">Source</a></span><a href=\"#method.ne\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.PartialEq.html#method.ne\" class=\"fn\">ne</a>(&amp;self, other: <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;Rhs</a>) -&gt; <a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.bool.html\">bool</a></h4></section></summary><div class='docblock'>Tests for <code>!=</code>. The default implementation is almost always sufficient,\nand should not be overridden without very good reason.</div></details></div></details>","PartialEq","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#160\">Source</a><a href=\"#impl-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;</h3></section></summary><div class=\"impl-items\"><details class=\"toggle method-toggle\" open><summary><section id=\"method.map\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#162\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/codemap/struct.Spanned.html#tymethod.map\" class=\"fn\">map</a>&lt;U&gt;(self, f: impl <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/ops/function/trait.FnOnce.html\" title=\"trait core::ops::function::FnOnce\">FnOnce</a>(T) -&gt; U) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;U&gt;</h4></section></summary><div class=\"docblock\"><p>Apply the function to the node, keep the span.</p>\n</div></details><section id=\"method.as_ref\" class=\"method\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#169\">Source</a><h4 class=\"code-header\">pub fn <a href=\"starlark/codemap/struct.Spanned.html#tymethod.as_ref\" class=\"fn\">as_ref</a>(&amp;self) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"primitive\" href=\"https://doc.rust-lang.org/nightly/std/primitive.reference.html\">&amp;T</a>&gt;</h4></section></div></details>",0,"starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-StmtPExt%3CA%3E-for-Spanned%3CStmtP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#433\">Source</a><a href=\"#impl-StmtPExt%3CA%3E-for-Spanned%3CStmtP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.StmtPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::StmtPExt\">StmtPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.StmtP.html\" title=\"enum starlark::syntax::ast::StmtP\">StmtP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#433\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.StmtPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"enum\" href=\"starlark/syntax/ast/enum.StmtP.html\" title=\"enum starlark::syntax::ast::StmtP\">StmtP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","StmtPExt<A>","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstStmt"],["<details class=\"toggle implementors-toggle\" open><summary><section id=\"impl-TypeExprPExt%3CA%3E-for-Spanned%3CTypeExprP%3CA%3E%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#427\">Source</a><a href=\"#impl-TypeExprPExt%3CA%3E-for-Spanned%3CTypeExprP%3CA%3E%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;A&gt; <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.TypeExprPExt.html\" title=\"trait starlark_syntax::syntax::payload_map::TypeExprPExt\">TypeExprPExt</a>&lt;A&gt; for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;A&gt;&gt;<div class=\"where\">where\n    A: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h3></section></summary><div class=\"impl-items\"><section id=\"method.into_map_payload\" class=\"method trait-impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/syntax/payload_map.rs.html#427\">Source</a><a href=\"#method.into_map_payload\" class=\"anchor\">§</a><h4 class=\"code-header\">fn <a href=\"starlark_syntax/syntax/payload_map/trait.TypeExprPExt.html#tymethod.into_map_payload\" class=\"fn\">into_map_payload</a>&lt;B&gt;(\n    self,\n    f: &amp;mut impl <a class=\"trait\" href=\"starlark_syntax/syntax/payload_map/trait.AstPayloadFunction.html\" title=\"trait starlark_syntax::syntax::payload_map::AstPayloadFunction\">AstPayloadFunction</a>&lt;A, B&gt;,\n) -&gt; <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;<a class=\"struct\" href=\"starlark/syntax/ast/struct.TypeExprP.html\" title=\"struct starlark::syntax::ast::TypeExprP\">TypeExprP</a>&lt;B&gt;&gt;<div class=\"where\">where\n    B: <a class=\"trait\" href=\"starlark/syntax/ast/trait.AstPayload.html\" title=\"trait starlark::syntax::ast::AstPayload\">AstPayload</a>,</div></h4></section></div></details>","TypeExprPExt<A>","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstTypeExpr"],["<section id=\"impl-Copy-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-Copy-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.Copy.html\" title=\"trait core::marker::Copy\">Copy</a>,</div></h3></section>","Copy","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<section id=\"impl-Eq-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-Eq-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;<div class=\"where\">where\n    T: <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/cmp/trait.Eq.html\" title=\"trait core::cmp::Eq\">Eq</a>,</div></h3></section>","Eq","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"],["<section id=\"impl-StructuralPartialEq-for-Spanned%3CT%3E\" class=\"impl\"><a class=\"src rightside\" href=\"src/starlark_syntax/codemap.rs.html#153\">Source</a><a href=\"#impl-StructuralPartialEq-for-Spanned%3CT%3E\" class=\"anchor\">§</a><h3 class=\"code-header\">impl&lt;T&gt; <a class=\"trait\" href=\"https://doc.rust-lang.org/nightly/core/marker/trait.StructuralPartialEq.html\" title=\"trait core::marker::StructuralPartialEq\">StructuralPartialEq</a> for <a class=\"struct\" href=\"starlark/codemap/struct.Spanned.html\" title=\"struct starlark::codemap::Spanned\">Spanned</a>&lt;T&gt;</h3></section>","StructuralPartialEq","starlark::syntax::ast::AstExprP","starlark::syntax::ast::AstTypeExprP","starlark::syntax::ast::AstAssignTargetP","starlark::syntax::ast::AstAssignIdentP","starlark::syntax::ast::AstIdentP","starlark::syntax::ast::AstArgumentP","starlark::syntax::ast::AstParameterP","starlark::syntax::ast::AstStmtP","starlark::syntax::ast::AstFStringP","starlark::syntax::ast::AstExpr","starlark::syntax::ast::AstTypeExpr","starlark::syntax::ast::AstAssignTarget","starlark::syntax::ast::AstAssignIdent","starlark::syntax::ast::AstIdent","starlark::syntax::ast::AstArgument","starlark::syntax::ast::AstString","starlark::syntax::ast::AstParameter","starlark::syntax::ast::AstInt","starlark::syntax::ast::AstFloat","starlark::syntax::ast::AstFString","starlark::syntax::ast::AstStmt"]]]]);
    if (window.register_type_impls) {
        window.register_type_impls(type_impls);
    } else {
        window.pending_type_impls = type_impls;
    }
})()
//{"start":55,"fragment_lengths":[46964]}